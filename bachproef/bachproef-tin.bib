% Encoding: UTF-8
@book{Knuth1998,
 author = {Knuth, Donald E.},
 title = {The art of computer programming,  volume 3: (2nd ed.) sorting and searching},
 year = {1998},
 publisher = {Addison Wesley Longman Publishing Co., Inc.},
 address = {Redwood City, CA, USA}
}

@book{Pollefliet2011,
  author = {Pollefliet, Leen},
  title = {Schrijven van verslag tot eindwerk: do's en don'ts},
  year = {2011},
  publisher = {Academia Press},
  address = {Gent}
}

@article{Creeger2009,
  author = {Creeger, Mache},
  journal = {Communications of the ACM},
  number = {8},
  pages = {50--56},
  title = {{CTO Roundtable: Cloud Computing}},
  volume = {52},
  year = {2009}
}

@InCollection{Mercl2018,
  author    = {Lubos Mercl and Jakub Pavlik},
  booktitle = {Advances in Intelligent Systems and Computing},
  date      = {2018-09},
  title     = {The Comparison of Container Orchestrators},
  doi       = {10.1007/978-981-13-1165-9_62},
  pages     = {677--685},
  publisher = {Springer Singapore},
}

@Article{Casalicchio2020,
  author       = {Emiliano Casalicchio and Stefano Iannucci},
  date         = {2020-01},
  journaltitle = {Concurrency and Computation: Practice and Experience},
  title        = {The state-of-the-art in container technologies: Application, orchestration and security},
  doi          = {10.1002/cpe.5668},
  number       = {17},
  volume       = {32},
  publisher    = {Wiley},
}

@Article{Burns2016,
  author       = {Burns, Brendan and Grant, Brian and Oppenheimer, David and Brewer, Eric and Wilkes, John},
  date         = {2016},
  journaltitle = {Queue},
  title        = {Borg, Omega, and Kubernetes: Lessons learned from three container-management systems over a decade},
  number       = {1},
  pages        = {70--93},
  volume       = {14},
  publisher    = {ACM New York, NY, USA},
}

@Article{Eder2016,
  author       = {Eder, Michael},
  date         = {2016},
  journaltitle = {Future Internet (FI) and Innovative Internet Technologies and Mobile Communications (IITM)},
  title        = {Hypervisor-vs. container-based virtualization},
  volume       = {1},
}

@Article{Truyen2019,
  author       = {Truyen, Eddy and Van Landuyt, Dimitri and Preuveneers, Davy and Lagaisse, Bert and Joosen, Wouter},
  date         = {2019},
  journaltitle = {Applied Sciences},
  title        = {A comprehensive feature comparison study of open-source container orchestration frameworks},
  doi          = {https://doi.org/10.3390/app9050931},
  number       = {5},
  pages        = {931},
  volume       = {9},
  publisher    = {Multidisciplinary Digital Publishing Institute},
}

@Book{SenthilKumaran2017,
  author    = {Senthil Kumaran, S},
  date      = {2017},
  title     = {Practical LXC and LXD: linux containers for virtualization and orchestration},
  publisher = {Springer},
}

@InCollection{Yadav2018,
  author    = {Anuj Kumar Yadav and M. L. Garg and Ritika},
  booktitle = {Advances in Intelligent Systems and Computing},
  date      = {2018-09},
  title     = {Docker Containers Versus Virtual Machine-Based Virtualization},
  doi       = {10.1007/978-981-13-1501-5_12},
  pages     = {141--150},
  publisher = {Springer Singapore},
}

@InBook{Jangla2018,
  author    = {Jangla, Kinnary},
  booktitle = {Accelerating Development Velocity Using Docker: Docker Across Microservices},
  date      = {2018},
  title     = {Containers},
  doi       = {10.1007/978-1-4842-3936-0_1},
  isbn      = {978-1-4842-3936-0},
  location  = {Berkeley, CA},
  pages     = {1--8},
  publisher = {Apress},
  url       = {https://doi.org/10.1007/978-1-4842-3936-0_1},
  abstract  = {In this chapter, you will learn the basics of containers and how they are used in the software industry. You will also see how containers differ from virtual machines and discover some of the pros and cons of using containers. This chapter puts you on the path to learning about Docker in depth.},
}

@InProceedings{Abdullah2019,
  author    = {Abdullah, Muhammad and Iqbal, Waheed and Bukhari, Faisal},
  booktitle = {Intelligent Technologies and Applications},
  date      = {2019},
  title     = {Containers vs Virtual Machines for Auto-scaling Multi-tier Applications Under Dynamically Increasing Workloads},
  editor    = {Bajwa, Imran Sarwar and Kamareddine, Fairouz and Costa, Anna},
  isbn      = {978-981-13-6052-7},
  location  = {Singapore},
  pages     = {153--167},
  publisher = {Springer Singapore},
  abstract  = {Multi-tier architecture is widely used to develop large-scale applications. Virtual Machines (VM) are commonly used to deploy and manage multi-tier applications where each tier of the application is deployed on a separate VM instance. However, recent advancements in OS-level virtualization, known as a Container, is compelling to use as an alternate to VM mainly due to it eliminates the need of a guest operating system and ensures a good level of isolation. In this paper, we compare the performance of VMs and Containers to deploy, manage, and auto-scale multi-tier applications under dynamically increasing workloads. We used OpenNebula-based private testbed cloud to provision VMs and Docker Swarm to provision Containers to a multi-tier application. Our experimental evaluation shows that Containers provide comparable performance to serve a large number of concurrent requests whereas a significant reduction in the rejected requests can be achieved. We observed 46.48{\%} and 70.23{\%} fewer request rejections using Container-based deployment and auto-scaling for multi-tier web applications.},
}

@Comment{jabref-meta: databaseType:biblatex;}
